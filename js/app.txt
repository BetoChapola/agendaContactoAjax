//llamamos al formulario por su id
const formularioContactos = document.querySelector('#contacto'),
      listadoContacto = document.querySelector('#listado-contactos tbody');

eventListeners();

function eventListeners(){
    //Cuando el formulario de editar o crear se ejecuta (se presiona el boton enviar o editar)

    formularioContactos.addEventListener('submit', leerFormulario);

    //Cuando damos clic al boton de eliminar
    // listadoContacto.addEventListener('click', eliminarContacto); 
}

function leerFormulario(e){
    e.preventDefault();
    
    //Leer los datos de los inputs

    const nombre = document.querySelector('#nombre').value;
    const empresa = document.querySelector('#empresa').value;
    const telefono = document.querySelector('#telefono').value,
          accion = document.querySelector('#accion').value;

    if(nombre === '' || empresa === '' || telefono === ''){
        // 2 parametros: texto y clase
        mostrarNotificacion('Todos los campos son obligatorios.', 'error');
    } else{
        // mostrarNotificacion('Contacto creado correctamente.', 'correcto');
        //Pasa la validacion, crear llamada a Ajax
        const infoContacto = new FormData();
        infoContacto.append('nombre', nombre); // append(llave, valor);
        infoContacto.append('empresa', empresa);
        infoContacto.append('telefono', telefono);
        infoContacto.append('accion', accion);

        // console.log(...infoContacto)

        if (accion === 'crear') {
            //creamos un nuevo contacto
            insertarBD(infoContacto);
        } else {
            //editar contacto
        }
        
    }
}

/** Inserta en la BD vía Ajax**/
function insertarBD(datos){
    //Llamado a Ajax

    // 1) Crear el objeto
    const xhr = new XMLHttpRequest();

    // 2) abrir la conexion
    xhr.open('POST', 'inc/modelos/modelo-contactos.php', true);

    // 3) pasar los datos
    xhr.onload = function(){
        if (this.status === 200) {
             //console.log(xhr.responseText);
            //Leemos la respuesta de PHP y la guardamnos en una variable:
            const respuesta = JSON.parse(xhr.responseText);
            
            //Inserta un nuevo elemento a la tabla:
            const nuevoContacto = document.createElement('tr');

            nuevoContacto.innerHTML = `
                <td>${respuesta.datos.nombre}</td>
                <td>${respuesta.datos.empresa}</td>
                <td>${respuesta.datos.telefono}</td>
            `;

            //Crear un contenedor para los botones:
            const contenedorAcciones = document.createElement('td');

            //Crear el icono de editar:
            const iconoEditar = document.createElement('i');
            iconoEditar.classList.add('fas','fa-pen-square');

            //Crear el enlace a editar
            const btnEditar = document.createElement('a');
            btnEditar.appendChild(iconoEditar);
            btnEditar.href = `editar.php?id=${respuesta.datos.id_insertado}`;
            btnEditar.classList.add('btn', 'btn-editar');

            //Agregarlo a padre
            contenedorAcciones.appendChild(btnEditar);

            //Crear el icono de eliminar:
            const iconoEliminar = document.createElement('i');
            iconoEliminar.classList.add('fas','fa-trash-alt');

            //Crear el boton de eliminar:
            const btnEliminar = document.createElement('button');
            btnEliminar.appendChild(iconoEliminar);
            btnEliminar.setAttribute('data-id', respuesta.datos.id_insertado);
            btnEliminar.classList.add('btn', 'btn-borrar');

            //Agregarlo al padre
            contenedorAcciones.appendChild(btnEliminar);

            //Agregarlo al tr
            nuevoContacto.appendChild(contenedorAcciones);

            //Agregarlo con los otros contacto en listado contactos
            listadoContacto.appendChild(nuevoContacto);

            //Resetear el form
            document.querySelector('form').reset();
            //Mostrar notificacion
            mostrarNotificacion('Contacto Creado Correctamente', 'correcto');
        }
    }
    
    // 4) enviar los datos
    xhr.send(datos);
}

//Eliminar el contacto
// function eliminarContacto(e){
//     /** 
//       Verificamos que el elemento que seleccionamos mediante el evento (e) click contenga la clase "btn-borrar".
//       Recordemos que el icono de borrar se encuentra dentro de su padre <td>. Es probable que el usuario no presione
//       precisamentre el icono de borrar, sino un poco de su contorno. Entonces tenemos que contemplar el elemento <td>
//       y que al mismo tiempo tenga la clase "btn-borrar": e.target.parentElement.classList.contains('btn-borrar'). 
//       Regresa TRUE.
//     **/
//     if (e.target.parentElement.classList.contains('btn-borrar')) {

//         //Tomar el id del elemento a eliminar:
//         const id = e.target.parentElement.getAttribute('data-id');
//         // console.log(id);

//         //Preguntar al usuario si quiere borrar el elemento
//         const respuesta = confirm('¿Deseas borrar este contacto?');
        
//         if (respuesta) {
//             // Llamado a Ajax

//             // 1) Crear el objeto XMLHttpRequest
//             const xhr = new XMLHttpRequest();

//             // 2) Abrir la conexion con el archivo de modelos.php
//             xhr.open('GET',`inc/modelos/modelo-contactos.php?id=${id}&accion=borrar`, true);

//             // 3) Leer la respuesta del archivo PHP
//             xhr.onload = function(){
//                 if (this.status === 200) {
//                     const resultado = xhr.responseText;
//                     console.log(resultado);
//                 }
//             }

//             // Enviar la petición
//             xhr.send();
//         }

//     }
// }



//Notificacion en pantalla
function mostrarNotificacion(mensaje, clase){
    const notificacion = document.createElement('div'); // 1) Crea un elemento
    notificacion.classList.add(clase, 'notificacion', 'sombra'); // 2) se asigna una clase (ubicada en style.css)
    notificacion.textContent = mensaje; // 3) se inserta el contenido en el div

    //formulario
    //se inserta el div en el form antes del legend
    formularioContactos.insertBefore(notificacion, document.querySelector('form legend'));

    //Ocultar y mostrar notificacion
    setTimeout(() => {
        notificacion.classList.add('visible');

        setTimeout(() => {
            notificacion.classList.remove('visible');
            
            setTimeout(() => {
                notificacion.remove();
            }, 500);
        }, 3000);
    }, 100);
}